services:

  db:
    container_name: db
    image: postgis/postgis:latest
    # command: bash -c "pg_ctl -D /var/lib/postgresql/data -l logfile start"
    environment:
      POSTGRES_DB: man_db
      POSTGRES_USER: man_user
      POSTGRES_PASSWORD: e3KR3B*AQqTMa4suUGVnbyyx-7s@Bex!vGF2zh2xkN6hiKXFrNCH4UeFpTVK8BDdp-_Qv48aj@MP7UQ!M.BUi*-*49r-vNyNrBwH
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

  django:
    container_name: django
    build:
      context: .
      dockerfile: Dockerfile
    command: >
      bash -c "cd /app/backend && 
      /usr/local/bin/wait-for-it.sh db:5432 -t 15 -- 
      pipenv run python manage.py makemigrations maritimeapp &&
      pipenv run python manage.py migrate &&
      pipenv run python manage.py populate &&
      pipenv run gunicorn -b 0.0.0.0:8000 --limit-request-line 0 mandatabase.wsgi:application"
    environment:
      DJANGO_DB_HOST: db
      DJANGO_DB_PORT: 5432
      DJANGO_DB_NAME: man_db
      DJANGO_DB_USER: man_user
      DJANGO_DB_PASS: e3KR3B*AQqTMa4suUGVnbyyx-7s@Bex!vGF2zh2xkN6hiKXFrNCH4UeFpTVK8BDdp-_Qv48aj@MP7UQ!M.BUi*-*49r-vNyNrBwH
      DJANGO_SECRET_KEY: 5hi_*o@$4pf@f078gzwxx3erernbh0fbw=_am9xf=5-88o_w(5
    depends_on:
      - db
    volumes:
      - ./django/mandatabase/urls.py:/app/backend/mandatabase/urls.py
    networks:
      - app-network

  frontend:
    container_name: frontend
    build:
      context: .
      dockerfile: Dockerfile
    command: bash -c "cd /app/frontend && pnpm setup && pnpm install -g serve && serve -s build"
    depends_on:
      - django
    networks:
      - app-network

  # cron:
  #   image: busybox:latest
  #   volumes:
  #     - ./cron-scripts/man_crontab:/etc/cron.d/man_crontab
  #     - ./cron-scripts/:/app/scripts
  #   command: >
  #     bash -c "cd /app/scripts &&
  #     service cron start &&
  #     tail -f /dev/null"
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   depends_on:
  #     - django
  #     - frontend
  #   networks:
  #     - app-network     

  nginx:
    container_name: nginx
    image: nginx:latest
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "8080:80"
    depends_on:
      - frontend
      - django
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
