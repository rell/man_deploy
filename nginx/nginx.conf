
user nginx;
worker_processes auto;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types {
        text/html html;
        text/css css;
        text/xml xml;
        image/gif gif;
        image/jpeg jpeg;
        application/json json;
        application/javascript js;
        application/atom+xml atom;
        application/rss+xml rss;
    }
    
    client_max_body_size 20M;  # May need to be adjusted post launch 
    large_client_header_buffers 4 32k;  # May need to be adjusted post launch

    include /etc/nginx/conf.d/*.conf;

    server {
        listen 80;
        #server_name ${AWS_PUB_DNS};
        server_name aeronet.gsfc.nasa.gov;
        # ignore  this is not being set as root domain since it is redirected to the server.via docker instead it is accesssible -> ip:port
      location / {
          proxy_pass http://frontend:3000;
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
          #root /app/frontend/build;
          #index index.html;
          #try_files $uri /index.html;
      }
        # ignore this is not being set as ip/api/ redirected to the server. via docker instead it is accesssible -> ip:port
      location /api/ {
          proxy_pass http://django:8000;
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
      }
    }
}

